name: Build Xwrt 
 
on:
  workflow_dispatch:
    inputs:
      version:
        description: '输入目标版本号（例如24.10.0）'
        required: true 
        default: '24.10.2'
      model_id:
        description: '选择机型ID'
        required: true 
        default: 'redmi_ax6-stock'
        type: choice 
        options:
          - redmi_ax6-stock 
          - qihoo_360t7
          - xiaomi_mi-router-3g
      packages:
        description: '选择要编译的包（用空格分隔），可用 -pkg 排除包'
        required: false 
        default: 'luci-i18n-daed-zh-cn luci-i18n-package-manager-zh-cn luci-app-quickstart luci-i18n-firewall-zh-cn luci-app-advancedplus kmod-fs-ext4 kmod-usb-dwc3 kmod-usb3 kmod-tcp-bbr swconfig kmod-nft-tproxy kmod-nft-socket opkg luci-app-vlmcsd luci-app-diskman luci-app-upnp luci-app-timedreboot luci-app-taskplan luci-theme-argon luci-app-wizard luci-i18n-base-zh-cn' 

jobs:
  download-build:
    runs-on: ubuntu-22.04 
    steps:
      - name: Checkout 
        uses: actions/checkout@v3
 
      - name: Initialization Environment
        run: |
          sudo apt-get -qq update
          sudo apt-get -qq install build-essential libncurses-dev zlib1g-dev gawk git gettext libssl-dev xsltproc rsync wget unzip python3 python3-distutils

      - name: Install dependencies 
        run: bash  scripts/install-deps.sh  
 
      - name: Get Target Platform 
        id: get-target 
        run: bash  scripts/get-platform.sh  ${{ inputs.version  }} ${{ inputs.model_id  }}
 
      - name: Download and Extract ImageBuilder 
        run: bash  scripts/download-extract.sh  ${{ inputs.version  }} ${{ steps.get-target.outputs.target_platform_slash  }} ${{ steps.get-target.outputs.target_platform_hyphen  }}

      - name: Configure Repositories 
        run: bash scripts/config-repos.sh 
  
      - name: Build Firmware 
        run: |
          cp -r files immortalwrt-imagebuilder-*/
          cd immortalwrt-imagebuilder-* || exit 1

          echo '
          define KernelPackage/xdp-sockets-diag
            SUBMENU:=$(NETWORK_SUPPORT_MENU)
            TITLE:=PF_XDP sockets monitoring interface support for ss utility
            KCONFIG:= \
            CONFIG_XDP_SOCKETS=y \
            CONFIG_XDP_SOCKETS_DIAG
            FILES:=$(LINUX_DIR)/net/xdp/xsk_diag.ko
            AUTOLOAD:=$(call AutoLoad,31,xsk_diag)
          endef

          define KernelPackage/xdp-sockets-diag/description
          Support for PF_XDP sockets monitoring interface used by the ss tool
          endef

          $(eval $(call KernelPackage,xdp-sockets-diag))
          ' >> package/kernel/linux/modules/netsupport.mk

          echo 'CONFIG_PACKAGE_kmod-xdp-sockets-diag=y' >> .config

          make image PROFILE="${{ inputs.model_id  }}" PACKAGES="${{ inputs.packages  }}" FILES="files"
                    
      - name: Upload Artifacts 
        uses: actions/upload-artifact@v4 
        with:
          name: firmware-${{ inputs.model_id  }}-${{ inputs.version  }}
          path: immortalwrt-imagebuilder-*/bin/targets/${{ steps.get-target.outputs.target_platform_slash  }}