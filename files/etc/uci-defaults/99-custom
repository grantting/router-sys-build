#!/bin/bash 
 
# 修改默认网关地址 
change_default_ip() {
    uci set network.lan.ipaddr="10.0.0.1" 
    uci commit network 
}
 
# 设置主机名 
change_hostname() {
    local new_hostname="Xwrt"
    uci set system.@system[0].hostname="$new_hostname"
    uci commit system 
    echo "$new_hostname" > /proc/sys/kernel/hostname 
}
 
# 追加编译作者信息 
modify_firmware_description() {
    sed -i "s/\(DISTRIB_DESCRIPTION='.*\)'/\1 Compiled by xding'/" /etc/openwrt_release 
}
 
# 设置root密码 
set_root_password() {
    echo -e "root\nroot" | passwd root >/dev/null 2>&1 
}
 
# 配置无线网络 
configure_wireless() {
    local radios=$(uci show wireless | grep -o 'radio[0-9]' | sort -u)
    local wifi_password="1234567890"
 
    [ -z "$radios" ] && return 
 
    for radio in $radios; do 
        local band=$(uci -q get wireless.${radio}.band)
        
        if [ "$band" = "5g" ]; then 
            uci set wireless.${radio}.htmode='HE160'
            uci set wireless.${radio}.channel='auto'
            uci set wireless.default_${radio}.ssid='WiFi_5G' 
            uci set wireless.default_${radio}.encryption='psk2' 
            uci set wireless.default_${radio}.key="$wifi_password" 
            uci set wireless.default_${radio}.ieee80211r='1'
            uci set wireless.default_${radio}.ft_over_ds='0'
            uci set wireless.default_${radio}.ft_psk_generate_local='1'
 
        elif [ "$band" = "2g" ]; then 
            uci set wireless.${radio}.htmode='HE40'
            uci set wireless.${radio}.channel='auto'
            uci set wireless.default_${radio}.ssid='WiFi_2.4G' 
            uci set wireless.default_${radio}.encryption='psk2' 
            uci set wireless.default_${radio}.key="$wifi_password" 
            uci set wireless.default_${radio}.ieee80211r='1'
            uci set wireless.default_${radio}.ft_over_ds='0'
            uci set wireless.default_${radio}.ft_psk_generate_local='1'
        fi 
    done 
    uci commit wireless 
}
 
# 配置WAN口LED 
configure_led_wan() {
    uci del system.led_wan.dev  2>/dev/null 
    uci del system.led_wan.mode  2>/dev/null 
    uci set system.led_wan.trigger='default-on' 
    uci commit system 
}
 
# 配置定时重启 
configure_taskplan() {
    # 删除可能存在的旧配置
    uci delete taskplan.weekly_reboot  2>/dev/null
    
    # 创建每周日凌晨5点重启任务
    uci add taskplan stime 
    uci rename taskplan.@stime[-1]='weekly_reboot'
    uci set taskplan.weekly_reboot.enable='1' 
    uci set taskplan.weekly_reboot.stype='1'          # 周循环类型
    uci set taskplan.weekly_reboot.month='*'          # 每月生效 
    uci set taskplan.weekly_reboot.week='0'           # 周日（0-6，0=周日）
    uci set taskplan.weekly_reboot.hour='5'           # 5点 
    uci set taskplan.weekly_reboot.minute='0'         # 0分
    uci set taskplan.weekly_reboot.command='reboot'   # 执行命令 
    uci set taskplan.weekly_reboot.remarks='每周日凌晨5点自动重启系统'  # 任务备注 
    
    uci commit taskplan
    /etc/init.d/taskplan restart 2>/dev/null
}
 
# 配置DHCP 
configure_dhcp(){
    uci set dhcp.@dnsmasq[0].dns_redirect='1'
    uci commit dhcp 
}
 
# 配置KMS服务器 
configure_vlmcsd() {
    uci set vlmcsd.config.enabled='1' 
    uci set vlmcsd.config.auto_activate='1' 
    uci set vlmcsd.config.internet_access='1' 
    uci commit vlmcsd 
    /etc/init.d/vlmcsd restart 2>/dev/null 
}

# 配置Passwall自动切换和SOCKS设置
configure_passwall() {
    # 确保Passwall已安装
    if [ -f /etc/config/passwall ]; then
        # 1. 先添加SOCKS节点 (示例配置，请根据实际情况修改)
        local socks_node_name="My_SOCKS_Proxy"
        uci add passwall nodes >/dev/null
        uci set passwall.@nodes[-1].name="$socks_node_name"
        uci set passwall.@nodes[-1].type="Socks"
        uci set passwall.@nodes[-1].address="your.socks.server.com"   # 替换为你的SOCKS服务器地址 
        uci set passwall.@nodes[-1].port="1080"                     # 替换为你的SOCKS端口
        uci set passwall.@nodes[-1].username="username"             # 如果需要认证
        uci set passwall.@nodes[-1].password="password"             # 如果需要认证
        uci set passwall.@nodes[-1].remarks="My SOCKS Proxy Server" # 备注信息 
        
        # 2. 然后启用SOCKS开关 
        uci set passwall.@global[0].socks_enabled='1'
        uci set passwall.@global[0].socks_port='1080'               # 本地SOCKS监听端口
        
        # 3. 最后配置自动切换 
        uci set passwall.@global_other[0].auto_switch_enable='1'
        uci set passwall.@global_other[0].auto_switch_check_interval='300'
        uci set passwall.@global_other[0].auto_switch_timeout='5000'
        uci set passwall.@global_other[0].auto_switch_try_count='3'
        uci set passwall.@global_other[0].auto_switch_test_url='www.google.com' 
        
        uci commit passwall
        /etc/init.d/passwall restart 2>/dev/null
        
        echo "已配置SOCKS节点并启用SOCKS服务"
    else 
        echo "Passwall未安装，跳过配置"
    fi 
}
 

# 主执行流程 
main() {
    change_default_ip 
    change_hostname 
    modify_firmware_description 
    set_root_password 
    configure_led_wan 
    configure_wireless 
    configure_taskplan 
    configure_dhcp 
    configure_vlmcsd
    configure_passwall
    uci commit 
}
 
main

rm -f /etc/uci-defaults/99-custom 2>/dev/null 